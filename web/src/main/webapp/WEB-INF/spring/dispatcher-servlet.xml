<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

    
    
    <!--
        Escaneo automático de clases anotadas:
        La siguiente declaración se encargará de levantar las clases que posean las
        anotaciones (@Controller, @RequestMapping, @Repository, etc) en el paquete que
        se le indique. Para el caso, se indica el paquete web.
    -->

	<mvc:annotation-driven/> 

	<context:component-scan base-package="pe.gob.onpe.tramitedoc" /> 
     <context:component-scan base-package="pe.gob.onpe.tramiteconv.dao.impl.oracle" /> 

    <!--  <context:component-scan base-package="pe.gob.onpe.tramitedoc" /> -->

    <!-- Imports user-defined @Controller beans that process client requests -->
   <!--<mvc:view-controller path="/" view-name="login"/>-->
    <mvc:view-controller path="/resourceNotFound"/>
    
    <context:annotation-config/>




    
<!--
    <mvc:interceptors>
    <beans:bean id="webContentInterceptor"
          class="org.springframework.web.servlet.mvc.WebContentInterceptor">
        <beans:property name="cacheSeconds" value="31556926"/>
        <beans:property name="useExpiresHeader" value="false"/>
        <beans:property name="useCacheControlHeader" value="true"/>
        <beans:property name="useCacheControlNoStore" value="false"/>
    </beans:bean>
    </mvc:interceptors>
-->
<!--
        <argument-resolvers>
            <beans:bean class="pe.gob.reniec.sio.entregadni.data.custom.CustomArgumentResolver"/>
        </argument-resolvers>
    </annotation-driven>
-->
    <!--<util:properties id="applicationProps" location="/WEB-INF/i18n/application.properties"/>-->

<!--
   <bean id="applicationProps" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
   <property name="location" >
           <value>/WEB-INF/i18n/application.properties</value>
   </property>
    </bean>
-->

    <mvc:resources mapping="/resources-#{applicationProps['resources.version']}/**" location="/, classpath:/META-INF/web-resources/" cache-period="31556926" />
    <mvc:default-servlet-handler/>
    <!-- Resolves localized messages*.properties and application.properties files in the application to	allow for internationalization.
        The messages*.properties files translate Roo generated messages which are part of the admin interface, the application.properties
        resource bundle localizes all application specific messages such as entity names and menu items. -->
    <bean class="org.springframework.context.support.ReloadableResourceBundleMessageSource" id="messageSource" p:basenames="WEB-INF/i18n/messages" p:fallbackToSystemLocale="false"/>

    <!-- store preferred language configuration in a cookie -->
    <bean class="org.springframework.web.servlet.i18n.CookieLocaleResolver" id="localeResolver" p:cookieName="locale"/>

    <!-- resolves localized <theme_name>.properties files in the classpath to allow for theme support -->
    <bean class="org.springframework.ui.context.support.ResourceBundleThemeSource" id="themeSource"/>

    <!-- store preferred theme configuration in a cookie -->
    <bean class="org.springframework.web.servlet.theme.CookieThemeResolver" id="themeResolver" p:cookieName="theme" p:defaultThemeName="standard"/>


    <bean class="org.springframework.web.servlet.view.tiles2.TilesConfigurer" id="tilesConfigurer">
        <property name="definitions">
          <list>
            <value>/WEB-INF/templates/layouts.xml</value>
            <!-- Scan views directory for Tiles configurations -->
            <value>/WEB-INF/views/**/views.xml</value>
          </list>
        </property>
    </bean>

    <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jspx" />
    </bean>

<!--
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jspx" />
                <property name="order" value="1"/>
	</bean>
-->	

    
    <!-- Add this tag to enable annotations transactions -->
    <!--<tx:annotation-driven  transaction-manager="transactionManager" proxy-target-class="true"/>-->
    <tx:annotation-driven  transaction-manager="transactionManager"/>

  <!--<bean id="transactionManager"-->
        <!--class="org.springframework.transaction.jta.JtaTransactionManager" />-->

    <bean id="transactionManager"
      class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      <property name="dataSource" ref="dataSource"></property>
    </bean>
  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="#{applicationProps['FILE_SIZE_MAX_MP']}" />
        <property name="maxInMemorySize" value="#{applicationProps['FILE_SIZE_MAX_MP']}" />
    </bean>
    
    
</beans>

